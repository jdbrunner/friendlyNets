Search.setIndex({"docnames": ["example", "format", "friendlynets", "index", "network_build", "scoring", "sensit", "usage"], "filenames": ["example.rst", "format.rst", "friendlynets.rst", "index.rst", "network_build.rst", "scoring.rst", "sensit.rst", "usage.rst"], "titles": ["Example", "Function for Formatting OTU tables", "The FriendlyNet class", "FriendlyNets documentation", "Functions for Making Interation Networks from GEMs", "Functions to Generate and Evaluate Predictions", "Functions for Sensitivity Testing", "Usage"], "terms": {"class": 3, "friendlynet": [1, 5, 6, 7], "adj": 2, "network": [1, 2, 3, 6], "design": [2, 7], "test": [2, 3, 7], "how": [2, 3, 4, 7], "posit": 2, "direct": 2, "i": [2, 3, 4, 5, 6, 7], "node": [2, 3, 4, 5, 6, 7], "provid": [0, 2, 3, 4, 7], "sever": 2, "wai": [2, 7], "score": [1, 2, 4, 5], "": [2, 3, 6, 7], "friendli": [2, 5], "given": [1, 2, 4, 7], "By": 2, "we": [0, 2, 4, 6, 7], "mean": [2, 5], "some": [2, 6, 7], "measur": 2, "much": [2, 3], "promot": [2, 3], "inhibit": [2, 3, 5, 6], "base": [2, 6], "choic": [2, 5], "interact": [1, 2, 3, 4, 5, 7], "model": [1, 2, 3, 4, 5, 6, 7], "repres": [2, 3], "graph": 2, "e": [1, 2, 4, 5, 7], "g": [1, 2, 3, 4, 5, 7], "lotka": [2, 3, 5, 7], "volterra": [2, 3, 5, 7], "diffus": 2, "paramet": [1, 2, 3, 4, 5], "n": 2, "arrai": [2, 4, 5, 6], "float": [2, 4, 5, 6], "adjac": [2, 5, 6], "matrix": [2, 5, 6], "nodenam": [1, 2], "list": [1, 2, 4, 5, 6, 7], "name": [1, 2, 4, 5, 6, 7], "correspond": [1, 2, 6, 7], "order": [2, 4, 5, 7], "indegre": 2, "total": [2, 7], "weight": [2, 6], "edg": 2, "each": [1, 2, 4, 5, 6, 7], "outdegre": 2, "out": [1, 2, 3, 7], "nodescor": 2, "panda": [1, 2, 4, 5, 7], "datafram": [1, 2, 4, 5, 7], "set": [1, 2, 3, 4, 5, 6], "chosen": 2, "dynam": [2, 3, 5, 6, 7], "edgelist": 2, "can": [1, 2, 5, 6, 7], "easili": 2, "save": [2, 7], "load": [2, 4, 7], "cytoscap": 2, "see": [2, 7], "make_edge_list": 2, "creat": [2, 4], "column": [1, 2, 4, 7], "sourc": [2, 6, 7], "target": [2, 6, 7], "abs_weight": 2, "absolut": [2, 7], "valu": [1, 2, 5, 6, 7], "sign_weight": 2, "modifi": [2, 5, 6], "return": [1, 2, 4, 5, 6, 7], "none": [2, 5, 6, 7], "lotka_volterra_system": 2, "t": [2, 4, 6], "shift": [2, 5, 6], "self_inhibit": [2, 5, 6], "right": [2, 6], "hand": [2, 6], "side": [2, 6], "gener": [2, 3, 7], "system": [2, 3, 5, 6, 7], "us": [0, 1, 2, 3, 4, 5, 6], "math": [], "rac": 4, "dx_i": [], "dt": [], "x_i": [2, 6, 7], "1": [1, 2, 4, 5, 6], "sum_": 2, "j": [2, 7], "a_": [2, 5, 6, 7], "ij": [2, 7], "x_j": 2, "param": [], "time": [2, 5, 6], "simul": [2, 3, 4, 5, 6, 7], "type": [1, 2, 4, 5, 6, 7], "state": [2, 6], "speci": [2, 7], "abund": [1, 2, 4, 5, 7], "uniform": [2, 4, 5, 6], "subtract": [2, 5, 6], "extent": [2, 5, 6, 7], "which": [2, 4, 5, 6, 7], "should": [1, 2, 4, 5, 6], "includ": [1, 2, 3, 4, 5, 6, 7], "self": [2, 5, 6], "term": [2, 5, 6], "ii": [2, 5, 6], "vector": 2, "field": 2, "rtype": [], "solve_lotka_volterra": 2, "s0": 2, "0": [2, 4, 5, 6], "bup": 2, "1000": [2, 6], "solv": [2, 6], "init": 2, "length": [2, 6], "maximum": 2, "allow": [2, 6], "If": [1, 2, 4, 5, 6, 7], "ani": [2, 7], "variabl": [2, 7], "reach": 2, "thi": [1, 2, 3, 4, 5, 6, 7], "assum": [2, 3, 7], "ha": [2, 7], "exhibit": 2, "finit": 2, "blowup": [2, 5], "stop": 2, "solut": [2, 4, 6], "scipi": [2, 6], "integr": [2, 6], "solve_ivp": [2, 6], "lotka_volterra_score_singl": 2, "mxtime": [2, 6], "100": [2, 4, 6], "determin": [1, 2, 4], "particular": [2, 5], "random": 2, "initi": 2, "condit": 2, "comput": [2, 4, 5, 6], "str": [1, 2, 4, 5, 6], "int": [2, 5, 6], "index": [1, 2, 4, 6, 7], "_description_": [], "_type_": [], "lotka_volterra_scor": 2, "numtrial": [2, 6], "nj": [2, 6], "cntbu": [2, 5], "fals": [2, 5], "antagonistic_lotka_volterra_system": [], "solve_antagonistic_lotka_volterra": [], "antagonistic_lotka_volterra_score_singl": [], "antagonistic_lotka_volterra_scor": [], "replicator_system": 2, "solve_repl": 2, "replicator_score_singl": 2, "replicator_scor": 2, "node_balanced_scor": 2, "node_balanced_system": 2, "stochastic_scor": 2, "score_nod": [2, 5], "odetri": [2, 5], "score_all_nod": 2, "method": [2, 3, 5], "assess": 3, "effect": [3, 5, 7], "microb": 3, "microbi": 3, "commun": [3, 4, 5, 7], "At": 3, "its": 3, "core": [2, 3], "judg": 3, "one": [3, 7], "It": [3, 7], "doe": [3, 4, 7], "result": [3, 4], "also": [1, 2, 3, 5, 7], "packag": [1, 3, 7], "function": [2, 3, 7], "from": [0, 1, 2, 3, 5, 6, 7], "genom": [3, 7], "scale": [3, 7], "metabol": [3, 7], "pairwis": [3, 7], "growth": [3, 4, 7], "ksc22": 3, "check": [3, 4], "usag": 3, "section": 3, "further": 3, "inform": 3, "instal": 3, "project": 3, "under": 3, "activ": 3, "develop": 3, "api": [], "minsuk": 3, "kim": 3, "jaeyun": 3, "sung": 3, "nichola": 3, "chia": 3, "resourc": 3, "alloc": 3, "constraint": 3, "govern": 3, "structur": 3, "engin": 3, "70": 3, "12": 3, "22": 3, "2022": 3, "To": [6, 7], "clone": 7, "github": 7, "git": 7, "http": 7, "com": 7, "jdbrunner": 7, "plan": 7, "add": 7, "pip": 7, "futur": 7, "you": [2, 5, 7], "need": [4, 5, 6, 7], "directori": 7, "your": 7, "python": 7, "path": [4, 7], "exampl": [3, 7], "import": 7, "sy": 7, "o": [3, 7], "append": 7, "join": 7, "expandus": 7, "locat": [4, 7], "where": [2, 6, 7], "folder": 7, "neg": [2, 5], "dot": 2, "x": [2, 3, 6], "_i": 2, "The": [3, 4, 5, 7], "built": 2, "an": [1, 2, 4, 6, 7], "contain": [2, 4, 7], "final": [2, 6], "rel": [1, 2, 5, 7], "finer": 2, "account": 2, "extinct": 2, "domin": 2, "t_e": 2, "proport": 2, "intern": 2, "t_d": 2, "interv": 2, "r": 2, "accord": 2, "singl": [2, 5, 7], "statu": 2, "od": [2, 5, 6], "tupl": [2, 4, 5, 6, 7], "repeat": 2, "trial": [2, 6], "number": [2, 4, 5, 6, 7], "parrallel": 2, "run": [2, 6, 7], "concurr": 2, "joblib": [2, 6, 7], "bool": [2, 4, 5], "whether": [2, 5], "count": [1, 2, 5], "blow": [2, 5], "up": [2, 5], "averag": [2, 6], "over": [2, 6], "all": [1, 2, 4, 5, 6, 7], "optino": 2, "replic": [2, 5], "ec": [], "A": [2, 7], "tax": 2, "rescal": [2, 5, 6], "so": [1, 2, 4, 7], "ar": [1, 2, 4, 5, 6, 7], "linear": 2, "l": [2, 6], "d": 2, "laplanc": 2, "after": 2, "have": [2, 7], "been": 2, "aris": [2, 6], "notion": 2, "balanc": 2, "becaus": [2, 6], "eigenvector": 2, "laplacian": 2, "equilibrium": [2, 6], "end": 2, "walk": [0, 2], "equival": 2, "build": [1, 2], "stochast": [2, 5], "transit": 2, "probabl": [2, 7], "stationari": 2, "distribut": 2, "cuncurr": 2, "choos": 2, "follow": 2, "lv": [2, 5], "inhibitlv": [2, 5], "antlv": [2, 5], "make": [2, 3, 7], "them": 2, "antagonist": 2, "equat": 2, "nodebal": [2, 5], "composit": [2, 5, 7], "simpli": [2, 7], "wish": [2, 5], "leav": [2, 5], "6": [2, 4, 5], "estim": [2, 5], "equal": [2, 5, 6], "dictionari": [2, 4, 5, 7], "kei": [2, 4, 5, 7], "trype": 2, "dict": [1, 2, 4, 5, 7], "tabl": [2, 3, 4, 7], "evalu": 3, "predict": [1, 3], "score_net": [1, 3, 5, 7], "score_light": [3, 5], "sensit": 3, "get_all_sensit": 6, "get_all_sensitivity_single_trajectori": 6, "get_sensit": 6, "get_sensitivity_single_trajectori": 6, "sense_kl": 6, "compute_j": 6, "experi": [4, 5, 7], "full_net": 5, "target_nod": [5, 6, 7], "scoretyp": [1, 5, 7], "min_ra": [4, 5], "1e": [4, 5], "06": [4, 5], "compar": 5, "known": [1, 4, 5, 7], "binari": [1, 5, 7], "good": 5, "bad": 5, "continu": [1, 5, 7], "later": [5, 6], "point": [5, 6], "perform": 5, "data": [0, 1, 4, 5], "between": [4, 5, 7], "pair": [4, 5, 7], "entir": [5, 7], "interest": [4, 5, 6, 7], "must": [4, 5, 6, 7], "sampl": [1, 3, 4, 5], "ad": 5, "induc": 5, "subgraph": 5, "b": [5, 6], "c": 5, "cutoff": [4, 5], "presenc": [4, 5], "abscenc": [4, 5], "default": [1, 4, 5, 6, 7], "10": [4, 5], "non": 5, "zero": 5, "taxa": [1, 5, 7], "auroc": 5, "roc": [5, 7], "curv": 5, "pearson": 5, "correl": [5, 7], "p": [5, 6], "valul": 5, "kendal": 5, "spearman": 5, "better": 5, "match": [1, 5, 7], "aucroc": 5, "OR": [4, 5], "score_model": 5, "lvshift": 5, "keepscor": 5, "ko": 5, "version": 5, "onli": [1, 4, 5, 7], "offer": 5, "more": [5, 7], "flexibl": 5, "detail": 5, "wether": 5, "knockout": 5, "remov": [1, 5, 7], "option": [4, 5, 7], "fnet": 6, "entri": 6, "k": 6, "net": 6, "format": 3, "otu": [3, 7], "inter": 3, "gem": 3, "check_co_occ": [3, 4], "make_gem_network": [4, 7], "co": [4, 7], "occurr": 4, "don": [4, 6], "those": [4, 7], "nxn": [4, 6], "indic": [1, 4, 6, 7], "occur": [4, 7], "give": 4, "wpt": 6, "40": 6, "base_w": 6, "5": 6, "timepoint": 6, "increas": 6, "sum": 6, "usual": 6, "other": [1, 3, 4, 6], "object": [4, 6], "most": 6, "commonli": [3, 6], "everi": 6, "otherwis": 6, "parallel": [6, 7], "last": 6, "partial": [6, 7], "kl": 6, "first": [6, 7], "next": 6, "par": 6, "1d": 6, "do": [4, 6, 7], "chain": 6, "rule": 6, "reus": 6, "volerra": 6, "want": 6, "repeatedli": 6, "call": [3, 6, 7], "u": 6, "closer": 6, "higher": 6, "granular": 6, "unweight": 6, "possibli": [4, 6], "soln": 6, "same": [4, 6], "senstiv": 6, "simulatoin": 6, "dens": 6, "output": [4, 6], "helper": 6, "defin": 6, "rh": 6, "set_friendli": [], "invas": 7, "around": 7, "microbiom": [3, 7], "studi": 7, "hopefulli": [], "written": 7, "anyth": 7, "long": 7, "For": 7, "user": 7, "what": [], "action": [], "step": [], "incomplet": [], "csv": [4, 7], "row": [1, 4, 7], "addition": 7, "power": [], "desir": [1, 7], "mai": 7, "experiment": 7, "outcom": 7, "depend": [3, 7], "metadata": [1, 7], "file": [4, 7], "full": [], "associ": 7, "being": 7, "Not": [], "implement": 7, "warn": [], "predicit": [], "format_data": [1, 3, 7], "format_experi": [], "path_to_t": [], "known_scor": [], "path_to_metadata": [], "score_column": [], "column_of_scor": [], "full_interaction_netwwork": [], "instead": 7, "loc": [4, 7], "m_1": 7, "m_2": 7, "full_interaction_network": 7, "score_typ": [], "requir": 7, "header": 7, "along": 7, "In": [3, 7], "case": 7, "attempt": 7, "guess": 7, "unless": 7, "binar": 7, "second": 7, "either": [1, 4, 7], "support": 5, "path_to_gsm_info": [], "miss": 7, "without": 7, "log": 7, "ratio": 7, "alon": 7, "nodes_of_interest": 7, "network_friendli": [3, 5, 7], "predictive_pow": 7, "metric": 7, "conveni": 7, "two": 7, "perturb": 7, "knock": 7, "frac": 7, "otu_t": 1, "kwarg": [1, 4], "dataset": [1, 7], "start": 1, "form": [1, 7], "samplenam": 1, "Will": 1, "filter": [1, 7], "id": [1, 4, 7], "left": 1, "avail": [1, 7], "gsm": [1, 3, 7], "sample_metadata": [1, 7], "omit": 1, "score_col": [1, 7], "node_nam": 1, "map": 1, "master": 1, "cobra": [1, 4], "included_otu": [1, 7], "exclud": 1, "name_nam": 1, "infer": 1, "edit": 1, "fit": 1, "easi": 1, "especi": 1, "identifi": 4, "our": [0, 7], "steadycomx": [4, 7], "gurobi": 7, "joint": 7, "fba": [4, 7], "expect": 7, "cobrapi": 7, "input": 7, "unfortun": 7, "current": 7, "access": 7, "cplex": 7, "licens": 7, "solver": 7, "specif": [4, 7], "veri": 7, "easier": 7, "often": 7, "signific": 7, "amount": 7, "pre": 7, "process": 7, "arrang": 7, "split": 7, "seper": 7, "etc": 7, "three": [], "coverag": 7, "otu_datafram": 7, "downstream": 7, "analysi": [0, 7], "relev": 7, "abov": 7, "furthermor": 7, "subset": 7, "metadata_datafram": 7, "taxa_with_model": 7, "third": 7, "numbermiss": 7, "majormiss": 7, "highest": 7, "geq": 7, "80": 7, "allmiss": 7, "guid": 7, "organ": 7, "might": 7, "construct": 7, "make_model": 7, "py": 7, "modelse": [4, 7], "cocultur": [3, 4], "get_pairwise_growth": [3, 4, 7], "cobra_model": 4, "media": [4, 7], "half": 4, "col": 4, "both": [4, 7], "allxal": 4, "flux": [4, 7], "bound": [4, 7], "metabolit": [4, 7], "target_model": 4, "empti": 4, "idtyp": 4, "compartmenttag": 4, "tag": 4, "exchang": 4, "_e0": 4, "fluxcol": 4, "keep_flux": 4, "true": 4, "new": 4, "previou": 4, "appear": 4, "mu": 4, "rate": 4, "default_inflow": 4, "inflow": 4, "phi": 4, "forc": 4, "leak": 4, "intracellular": 4, "budget": 4, "cultur": 4, "df": 4, "cobra_model_list": 4, "media_fl": 4, "info": 4, "json": 4, "silence_load_error": 4, "suppress": 4, "error": 4, "fullnam": 4, "fluxvalu": 4, "4": [3, 4], "well": [4, 7], "standard": 4, "seri": 4, "pair_growth": 7, "fba_growth": 7, "model_list": 7, "media_pth": 7, "found": 7, "translate_agora_media": 7, "updat": 7, "script": 7, "get_agora_media": 7, "pass": 7, "skip": 7, "when": 7, "few": 7, "simplest": 7, "partner": 7, "influenc": 7, "func": 7, "through": 0, "tutori": 0, "mgomezmartinezb": [0, 3], "16": [0, 3], "mar": 3, "\u00ed": 3, "maldonado": 3, "\u00f3": 3, "mez": 3, "\u00e9": 3, "mart": 3, "nez": 3, "francesca": 3, "bottacini": 3, "ami": 3, "callaghan": 3, "marco": 3, "ventura": 3, "douw": 3, "van": 3, "sinderen": 3, "benjamin": 3, "hillmann": 3, "pajau": 3, "vangai": 3, "dan": 3, "knight": 3, "robert": 3, "w": 3, "hutkin": 3, "stabl": 3, "engraft": 3, "bifidobacterium": 3, "longum": 3, "ah1206": 3, "human": 3, "gut": 3, "individu": 3, "featur": 3, "resid": 3, "cell": 3, "host": 3, "20": 3, "515": 3, "526": 3, "2016": 3, "complet": 4}, "objects": {"format_data": [[1, 0, 1, "", "format_data"]], "friendlyNet": [[2, 1, 1, "", "friendlyNet"]], "friendlyNet.friendlyNet": [[2, 2, 1, "", "EdgeList"], [2, 2, 1, "", "InDegree"], [2, 2, 1, "", "NodeNames"], [2, 2, 1, "", "NodeScores"], [2, 2, 1, "", "OutDegree"], [2, 3, 1, "", "lotka_volterra_score"], [2, 3, 1, "", "lotka_volterra_score_single"], [2, 3, 1, "", "lotka_volterra_system"], [2, 3, 1, "", "make_edge_list"], [2, 3, 1, "", "node_balanced_score"], [2, 3, 1, "", "node_balanced_system"], [2, 3, 1, "", "replicator_score"], [2, 3, 1, "", "replicator_score_single"], [2, 3, 1, "", "replicator_system"], [2, 3, 1, "", "score_all_nodes"], [2, 3, 1, "", "score_node"], [2, 3, 1, "", "solve_lotka_volterra"], [2, 3, 1, "", "solve_replicator"], [2, 3, 1, "", "stochastic_score"]], "make_gem_network": [[4, 0, 1, "", "check_co_occ"], [4, 0, 1, "", "cocultures"], [4, 0, 1, "", "get_pairwise_growth"]], "score_net": [[5, 0, 1, "", "network_friendliness"], [5, 0, 1, "", "score_light"], [5, 0, 1, "", "score_net"]], "sensitivity": [[6, 0, 1, "", "compute_j"], [6, 0, 1, "", "get_all_sensitivity"], [6, 0, 1, "", "get_all_sensitivity_single_trajectory"], [6, 0, 1, "", "get_sensitivity_single_trajectory"], [6, 0, 1, "", "sense_kl"]]}, "objtypes": {"0": "py:function", "1": "py:class", "2": "py:attribute", "3": "py:method"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"]}, "titleterms": {"api": [], "friendlynet": [2, 3], "document": 3, "content": 3, "usag": 7, "instal": 7, "The": 2, "class": 2, "function": [1, 4, 5, 6], "gener": 5, "evalu": 5, "predict": [5, 7], "paramet": [6, 7], "sensit": [6, 7], "test": 6, "format": [1, 7], "otu": 1, "tabl": 1, "make": 4, "inter": 4, "network": [4, 7], "from": 4, "gem": 4, "lotka": 6, "volterra": 6, "interact": 6, "us": 7, "method": 7, "set": 7, "sampl": 7, "data": 7, "creat": 7, "full": 7, "comput": 7, "friendli": 7, "score": 7, "assess": 7, "power": 7, "plot": 7, "result": 7, "exampl": 0}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"Functions for Sensitivity Testing": [[6, "functions-for-sensitivity-testing"]], "Functions for Lotka-Volterra Interaction Parameter Sensitivity Testing": [[6, "functions-for-lotka-volterra-interaction-parameter-sensitivity-testing"]], "Function for Formatting OTU tables": [[1, "function-for-formatting-otu-tables"]], "Example": [[0, "example"]], "The FriendlyNet class": [[2, "the-friendlynet-class"]], "FriendlyNets documentation": [[3, "friendlynets-documentation"]], "Contents:": [[3, null]], "Functions for Making Interation Networks from GEMs": [[4, "functions-for-making-interation-networks-from-gems"]], "Functions to Generate and Evaluate Predictions": [[5, "functions-to-generate-and-evaluate-predictions"]], "Usage": [[7, "usage"]], "Installation": [[7, "installation"]], "Using the Method for a Set of Samples": [[7, "using-the-method-for-a-set-of-samples"]], "Formatting the data": [[7, "formatting-the-data"]], "Creating the full network": [[7, "creating-the-full-network"]], "Computing Friendliness Scores and Assessing Predictive Power": [[7, "computing-friendliness-scores-and-assessing-predictive-power"]], "Plotting the Results": [[7, "plotting-the-results"]], "Sensitivity to Parameters": [[7, "sensitivity-to-parameters"]]}, "indexentries": {"edgelist (friendlynet.friendlynet attribute)": [[2, "friendlyNet.friendlyNet.EdgeList"]], "indegree (friendlynet.friendlynet attribute)": [[2, "friendlyNet.friendlyNet.InDegree"]], "nodenames (friendlynet.friendlynet attribute)": [[2, "friendlyNet.friendlyNet.NodeNames"]], "nodescores (friendlynet.friendlynet attribute)": [[2, "friendlyNet.friendlyNet.NodeScores"]], "outdegree (friendlynet.friendlynet attribute)": [[2, "friendlyNet.friendlyNet.OutDegree"]], "friendlynet (class in friendlynet)": [[2, "friendlyNet.friendlyNet"]], "lotka_volterra_score() (friendlynet.friendlynet method)": [[2, "friendlyNet.friendlyNet.lotka_volterra_score"]], "lotka_volterra_score_single() (friendlynet.friendlynet method)": [[2, "friendlyNet.friendlyNet.lotka_volterra_score_single"]], "lotka_volterra_system() (friendlynet.friendlynet method)": [[2, "friendlyNet.friendlyNet.lotka_volterra_system"]], "make_edge_list() (friendlynet.friendlynet method)": [[2, "friendlyNet.friendlyNet.make_edge_list"]], "node_balanced_score() (friendlynet.friendlynet method)": [[2, "friendlyNet.friendlyNet.node_balanced_score"]], "node_balanced_system() (friendlynet.friendlynet method)": [[2, "friendlyNet.friendlyNet.node_balanced_system"]], "replicator_score() (friendlynet.friendlynet method)": [[2, "friendlyNet.friendlyNet.replicator_score"]], "replicator_score_single() (friendlynet.friendlynet method)": [[2, "friendlyNet.friendlyNet.replicator_score_single"]], "replicator_system() (friendlynet.friendlynet method)": [[2, "friendlyNet.friendlyNet.replicator_system"]], "score_all_nodes() (friendlynet.friendlynet method)": [[2, "friendlyNet.friendlyNet.score_all_nodes"]], "score_node() (friendlynet.friendlynet method)": [[2, "friendlyNet.friendlyNet.score_node"]], "solve_lotka_volterra() (friendlynet.friendlynet method)": [[2, "friendlyNet.friendlyNet.solve_lotka_volterra"]], "solve_replicator() (friendlynet.friendlynet method)": [[2, "friendlyNet.friendlyNet.solve_replicator"]], "stochastic_score() (friendlynet.friendlynet method)": [[2, "friendlyNet.friendlyNet.stochastic_score"]], "check_co_occ() (in module make_gem_network)": [[4, "make_gem_network.check_co_occ"]], "cocultures() (in module make_gem_network)": [[4, "make_gem_network.cocultures"]], "get_pairwise_growth() (in module make_gem_network)": [[4, "make_gem_network.get_pairwise_growth"]], "network_friendliness() (in module score_net)": [[5, "score_net.network_friendliness"]], "score_light() (in module score_net)": [[5, "score_net.score_light"]], "score_net() (in module score_net)": [[5, "score_net.score_net"]]}})